{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/mint/src/components/TextMatcher.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport list1 from '../assets/phase1.txt';\nimport list2 from '../assets/phase2.txt';\nimport list3 from '../assets/phase3.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextMatcher = () => {\n  _s();\n\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n\n  const checkEligibility = () => {\n    const cleanedInput = inputText.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    const cleanedList1 = list1.map(entry => entry.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase());\n    const cleanedList2 = list2.map(entry => entry.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase());\n    const cleanedList3 = list3.map(entry => entry.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase());\n    const isInList1 = cleanedList1.includes(cleanedInput);\n    const isInList2 = cleanedList2.includes(cleanedInput);\n    const isInList3 = cleanedList3.includes(cleanedInput);\n\n    if (isInList1 && isInList2 && isInList3) {\n      setResult(`Matches in all lists: List 1, List 2, List 3`);\n    } else if (isInList1 && isInList2) {\n      setResult(`Matches in List 1 and List 2`);\n    } else if (isInList1 && isInList3) {\n      setResult(`Matches in List 1 and List 3`);\n    } else if (isInList2 && isInList3) {\n      setResult(`Matches in List 2 and List 3`);\n    } else if (isInList1) {\n      setResult(`Matches in List 1`);\n    } else if (isInList2) {\n      setResult(`Matches in List 2`);\n    } else if (isInList3) {\n      setResult(`Matches in List 3`);\n    } else {\n      setResult(`Ineligible`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkEligibility,\n      children: \"Check Eligibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextMatcher, \"+ic3A9ZxxgbnBQyFMHL5t7zX+I4=\");\n\n_c = TextMatcher;\nexport default TextMatcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextMatcher\");","map":{"version":3,"sources":["/Users/charles/Desktop/mint/src/components/TextMatcher.js"],"names":["React","useState","list1","list2","list3","TextMatcher","inputText","setInputText","result","setResult","checkEligibility","cleanedInput","trim","replace","toLowerCase","cleanedList1","map","entry","cleanedList2","cleanedList3","isInList1","includes","isInList2","isInList3","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMS,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,YAAY,GAAGL,SAAS,CAACM,IAAV,GAAiBC,OAAjB,CAAyB,eAAzB,EAA0C,EAA1C,EAA8CC,WAA9C,EAArB;AACA,UAAMC,YAAY,GAAGb,KAAK,CAACc,GAAN,CAAUC,KAAK,IAAIA,KAAK,CAACL,IAAN,GAAaC,OAAb,CAAqB,eAArB,EAAsC,EAAtC,EAA0CC,WAA1C,EAAnB,CAArB;AACA,UAAMI,YAAY,GAAGf,KAAK,CAACa,GAAN,CAAUC,KAAK,IAAIA,KAAK,CAACL,IAAN,GAAaC,OAAb,CAAqB,eAArB,EAAsC,EAAtC,EAA0CC,WAA1C,EAAnB,CAArB;AACA,UAAMK,YAAY,GAAGf,KAAK,CAACY,GAAN,CAAUC,KAAK,IAAIA,KAAK,CAACL,IAAN,GAAaC,OAAb,CAAqB,eAArB,EAAsC,EAAtC,EAA0CC,WAA1C,EAAnB,CAArB;AAEA,UAAMM,SAAS,GAAGL,YAAY,CAACM,QAAb,CAAsBV,YAAtB,CAAlB;AACA,UAAMW,SAAS,GAAGJ,YAAY,CAACG,QAAb,CAAsBV,YAAtB,CAAlB;AACA,UAAMY,SAAS,GAAGJ,YAAY,CAACE,QAAb,CAAsBV,YAAtB,CAAlB;;AAEA,QAAIS,SAAS,IAAIE,SAAb,IAA0BC,SAA9B,EAAyC;AACvCd,MAAAA,SAAS,CAAE,8CAAF,CAAT;AACD,KAFD,MAEO,IAAIW,SAAS,IAAIE,SAAjB,EAA4B;AACjCb,MAAAA,SAAS,CAAE,8BAAF,CAAT;AACD,KAFM,MAEA,IAAIW,SAAS,IAAIG,SAAjB,EAA4B;AACjCd,MAAAA,SAAS,CAAE,8BAAF,CAAT;AACD,KAFM,MAEA,IAAIa,SAAS,IAAIC,SAAjB,EAA4B;AACjCd,MAAAA,SAAS,CAAE,8BAAF,CAAT;AACD,KAFM,MAEA,IAAIW,SAAJ,EAAe;AACpBX,MAAAA,SAAS,CAAE,mBAAF,CAAT;AACD,KAFM,MAEA,IAAIa,SAAJ,EAAe;AACpBb,MAAAA,SAAS,CAAE,mBAAF,CAAT;AACD,KAFM,MAEA,IAAIc,SAAJ,EAAe;AACpBd,MAAAA,SAAS,CAAE,mBAAF,CAAT;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,CAAE,YAAF,CAAT;AACD;AACF,GA3BD;;AA6BA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,SAFT;AAGE,MAAA,QAAQ,EAAGkB,CAAD,IAAOjB,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH/B;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,OAAO,EAAEhB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGF,MAAM,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5CD;;GAAMH,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport list1 from '../assets/phase1.txt';\nimport list2 from '../assets/phase2.txt';\nimport list3 from '../assets/phase3.txt';\n\nconst TextMatcher = () => {\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n\n  const checkEligibility = () => {\n    const cleanedInput = inputText.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    const cleanedList1 = list1.map(entry => entry.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase());\n    const cleanedList2 = list2.map(entry => entry.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase());\n    const cleanedList3 = list3.map(entry => entry.trim().replace(/[^a-zA-Z0-9]/g, '').toLowerCase());\n  \n    const isInList1 = cleanedList1.includes(cleanedInput);\n    const isInList2 = cleanedList2.includes(cleanedInput);\n    const isInList3 = cleanedList3.includes(cleanedInput);\n\n    if (isInList1 && isInList2 && isInList3) {\n      setResult(`Matches in all lists: List 1, List 2, List 3`);\n    } else if (isInList1 && isInList2) {\n      setResult(`Matches in List 1 and List 2`);\n    } else if (isInList1 && isInList3) {\n      setResult(`Matches in List 1 and List 3`);\n    } else if (isInList2 && isInList3) {\n      setResult(`Matches in List 2 and List 3`);\n    } else if (isInList1) {\n      setResult(`Matches in List 1`);\n    } else if (isInList2) {\n      setResult(`Matches in List 2`);\n    } else if (isInList3) {\n      setResult(`Matches in List 3`);\n    } else {\n      setResult(`Ineligible`);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <button onClick={checkEligibility}>Check Eligibility</button>\n      {result && <p>{result}</p>}\n    </div>\n  );\n};\n\nexport default TextMatcher;"]},"metadata":{},"sourceType":"module"}
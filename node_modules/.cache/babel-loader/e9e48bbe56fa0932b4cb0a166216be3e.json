{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/mint/src/components/TextMatcher.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport list1 from '../assets/phase1.txt';\nimport list2 from '../assets/phase2.txt';\nimport list3 from '../assets/phase3.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextMatcher = () => {\n  _s();\n\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n\n  const checkEligibility = () => {\n    const isInList1 = list1.includes(inputText);\n    const isInList2 = list2.includes(inputText);\n    const isInList3 = list3.includes(inputText);\n\n    if (isInList1 && isInList2 && isInList3) {\n      setResult(`Matches in all lists: List 1, List 2, List 3`);\n    } else if (isInList1 && isInList2) {\n      setResult(`Matches in List 1 and List 2`);\n    } else if (isInList1 && isInList3) {\n      setResult(`Matches in List 1 and List 3`);\n    } else if (isInList2 && isInList3) {\n      setResult(`Matches in List 2 and List 3`);\n    } else if (isInList1) {\n      setResult(`Matches in List 1`);\n    } else if (isInList2) {\n      setResult(`Matches in List 2`);\n    } else if (isInList3) {\n      setResult(`Matches in List 3`);\n    } else {\n      setResult(`Ineligible`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkEligibility,\n      children: \"Check Eligibility\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextMatcher, \"+ic3A9ZxxgbnBQyFMHL5t7zX+I4=\");\n\n_c = TextMatcher;\nexport default TextMatcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextMatcher\");","map":{"version":3,"sources":["/Users/charles/Desktop/mint/src/components/TextMatcher.js"],"names":["React","useState","list1","list2","list3","TextMatcher","inputText","setInputText","result","setResult","checkEligibility","isInList1","includes","isInList2","isInList3","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMS,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,SAAS,GAAGT,KAAK,CAACU,QAAN,CAAeN,SAAf,CAAlB;AACA,UAAMO,SAAS,GAAGV,KAAK,CAACS,QAAN,CAAeN,SAAf,CAAlB;AACA,UAAMQ,SAAS,GAAGV,KAAK,CAACQ,QAAN,CAAeN,SAAf,CAAlB;;AAEA,QAAIK,SAAS,IAAIE,SAAb,IAA0BC,SAA9B,EAAyC;AACvCL,MAAAA,SAAS,CAAE,8CAAF,CAAT;AACD,KAFD,MAEO,IAAIE,SAAS,IAAIE,SAAjB,EAA4B;AACjCJ,MAAAA,SAAS,CAAE,8BAAF,CAAT;AACD,KAFM,MAEA,IAAIE,SAAS,IAAIG,SAAjB,EAA4B;AACjCL,MAAAA,SAAS,CAAE,8BAAF,CAAT;AACD,KAFM,MAEA,IAAII,SAAS,IAAIC,SAAjB,EAA4B;AACjCL,MAAAA,SAAS,CAAE,8BAAF,CAAT;AACD,KAFM,MAEA,IAAIE,SAAJ,EAAe;AACpBF,MAAAA,SAAS,CAAE,mBAAF,CAAT;AACD,KAFM,MAEA,IAAII,SAAJ,EAAe;AACpBJ,MAAAA,SAAS,CAAE,mBAAF,CAAT;AACD,KAFM,MAEA,IAAIK,SAAJ,EAAe;AACpBL,MAAAA,SAAS,CAAE,mBAAF,CAAT;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,CAAE,YAAF,CAAT;AACD;AACF,GAtBD;;AAwBA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,SAFT;AAGE,MAAA,QAAQ,EAAGS,CAAD,IAAOR,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAH/B;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,OAAO,EAAEP,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGF,MAAM,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvCD;;GAAMH,W;;KAAAA,W;AAyCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport list1 from '../assets/phase1.txt';\nimport list2 from '../assets/phase2.txt';\nimport list3 from '../assets/phase3.txt';\n\nconst TextMatcher = () => {\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n\n  const checkEligibility = () => {\n    const isInList1 = list1.includes(inputText);\n    const isInList2 = list2.includes(inputText);\n    const isInList3 = list3.includes(inputText);\n\n    if (isInList1 && isInList2 && isInList3) {\n      setResult(`Matches in all lists: List 1, List 2, List 3`);\n    } else if (isInList1 && isInList2) {\n      setResult(`Matches in List 1 and List 2`);\n    } else if (isInList1 && isInList3) {\n      setResult(`Matches in List 1 and List 3`);\n    } else if (isInList2 && isInList3) {\n      setResult(`Matches in List 2 and List 3`);\n    } else if (isInList1) {\n      setResult(`Matches in List 1`);\n    } else if (isInList2) {\n      setResult(`Matches in List 2`);\n    } else if (isInList3) {\n      setResult(`Matches in List 3`);\n    } else {\n      setResult(`Ineligible`);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <button onClick={checkEligibility}>Check Eligibility</button>\n      {result && <p>{result}</p>}\n    </div>\n  );\n};\n\nexport default TextMatcher;"]},"metadata":{},"sourceType":"module"}